/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protos/request.proto */

#ifndef PROTOBUF_C_protos_2frequest_2eproto__INCLUDED
#define PROTOBUF_C_protos_2frequest_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "protos/requests/listLogs.pb-c.h"
#include "protos/requests/getLog.pb-c.h"
#include "protos/requests/newLog.pb-c.h"
#include "protos/requests/deleteLog.pb-c.h"
#include "protos/requests/formatSd.pb-c.h"

typedef struct Request Request;
typedef struct RequestPayload RequestPayload;


/* --- enums --- */


/* --- messages --- */

struct  Request
{
  ProtobufCMessage base;
  uint32_t request_id;
  RequestPayload *payload;
};
#define REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request__descriptor) \
    , 0, NULL }


typedef enum {
  REQUEST_PAYLOAD__PAYLOAD__NOT_SET = 0,
  REQUEST_PAYLOAD__PAYLOAD_LIST_LOGS = 1,
  REQUEST_PAYLOAD__PAYLOAD_GET_LOG = 2,
  REQUEST_PAYLOAD__PAYLOAD_NEW_LOG = 3,
  REQUEST_PAYLOAD__PAYLOAD_DELETE_LOG = 4,
  REQUEST_PAYLOAD__PAYLOAD_FORMAT_SD = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(REQUEST_PAYLOAD__PAYLOAD__CASE)
} RequestPayload__PayloadCase;

struct  RequestPayload
{
  ProtobufCMessage base;
  RequestPayload__PayloadCase payload_case;
  union {
    ListLogs *list_logs;
    GetLog *get_log;
    NewLog *new_log;
    DeleteLog *delete_log;
    FormatSd *format_sd;
  };
};
#define REQUEST_PAYLOAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request_payload__descriptor) \
    , REQUEST_PAYLOAD__PAYLOAD__NOT_SET, {0} }


/* Request methods */
void   request__init
                     (Request         *message);
size_t request__get_packed_size
                     (const Request   *message);
size_t request__pack
                     (const Request   *message,
                      uint8_t             *out);
size_t request__pack_to_buffer
                     (const Request   *message,
                      ProtobufCBuffer     *buffer);
Request *
       request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request__free_unpacked
                     (Request *message,
                      ProtobufCAllocator *allocator);
/* RequestPayload methods */
void   request_payload__init
                     (RequestPayload         *message);
size_t request_payload__get_packed_size
                     (const RequestPayload   *message);
size_t request_payload__pack
                     (const RequestPayload   *message,
                      uint8_t             *out);
size_t request_payload__pack_to_buffer
                     (const RequestPayload   *message,
                      ProtobufCBuffer     *buffer);
RequestPayload *
       request_payload__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request_payload__free_unpacked
                     (RequestPayload *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Request_Closure)
                 (const Request *message,
                  void *closure_data);
typedef void (*RequestPayload_Closure)
                 (const RequestPayload *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor request__descriptor;
extern const ProtobufCMessageDescriptor request_payload__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protos_2frequest_2eproto__INCLUDED */
