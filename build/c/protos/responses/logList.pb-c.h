/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protos/responses/logList.proto */

#ifndef PROTOBUF_C_protos_2fresponses_2flogList_2eproto__INCLUDED
#define PROTOBUF_C_protos_2fresponses_2flogList_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct LogList LogList;
typedef struct LogListLogInfo LogListLogInfo;


/* --- enums --- */


/* --- messages --- */

struct  LogList
{
  ProtobufCMessage base;
  uint32_t prefix;
  /*
   * if a negative offset was provided in the request, return the absolute offset
   */
  uint32_t offset;
  uint32_t count;
  uint32_t total;
  size_t n_logs;
  LogListLogInfo **logs;
};
#define LOG_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log_list__descriptor) \
    , 0, 0, 0, 0, 0,NULL }


struct  LogListLogInfo
{
  ProtobufCMessage base;
  char *log_id;
};
#define LOG_LIST_LOG_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log_list_log_info__descriptor) \
    , (char *)protobuf_c_empty_string }


/* LogList methods */
void   log_list__init
                     (LogList         *message);
size_t log_list__get_packed_size
                     (const LogList   *message);
size_t log_list__pack
                     (const LogList   *message,
                      uint8_t             *out);
size_t log_list__pack_to_buffer
                     (const LogList   *message,
                      ProtobufCBuffer     *buffer);
LogList *
       log_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   log_list__free_unpacked
                     (LogList *message,
                      ProtobufCAllocator *allocator);
/* LogListLogInfo methods */
void   log_list_log_info__init
                     (LogListLogInfo         *message);
size_t log_list_log_info__get_packed_size
                     (const LogListLogInfo   *message);
size_t log_list_log_info__pack
                     (const LogListLogInfo   *message,
                      uint8_t             *out);
size_t log_list_log_info__pack_to_buffer
                     (const LogListLogInfo   *message,
                      ProtobufCBuffer     *buffer);
LogListLogInfo *
       log_list_log_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   log_list_log_info__free_unpacked
                     (LogListLogInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*LogList_Closure)
                 (const LogList *message,
                  void *closure_data);
typedef void (*LogListLogInfo_Closure)
                 (const LogListLogInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor log_list__descriptor;
extern const ProtobufCMessageDescriptor log_list_log_info__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protos_2fresponses_2flogList_2eproto__INCLUDED */
